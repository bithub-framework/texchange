import { HLike, HStatic } from 'secretary-like';
import { BaseContainer } from '@zimtsui/injektor';
import { TYPES } from './types';
import { Context } from '../context';
import { Spec } from '../context.d/spec';
import { TimelineLike } from 'secretary-like';
import { DataStatic } from '../interfaces/data';
import { MarketCalc } from 'secretary-like';
import { Models } from '../texchange/models';
import { Makers } from '../models.d/makers/makers';
import { Pricing } from '../models.d/pricing/pricing';
import { Assets } from '../models.d/assets';
import { Book } from '../models.d/book';
import { Progress } from '../models.d/progress';
import { Margins } from '../models.d/margins';
import { Broadcast } from '../broadcast';
import { Mtm } from '../mark-to-market/mtm';
import { Tasks } from '../texchange/tasks';
import { TaskMakeOpenOrder } from '../tasks.d/make-open-order';
import { TaskCancelOpenOrder } from '../tasks.d/cancel-open-order';
import { TaskGetBalances } from '../tasks.d/get-balances';
import { TaskGetClosable } from '../tasks.d/get-closable';
import { TaskGetPositions } from '../tasks.d/get-positions';
import { TaskOrderMakes } from '../tasks.d/order-makes';
import { TaskOrderTakes } from '../tasks.d/order-takes';
import { TaskTradeTakesOpenMakers } from '../tasks.d/trade-takes-open-makers';
import { TaskValidateOrder } from '../tasks.d/validate-order';
import { TaskOrderVolumes } from '../tasks.d/order-volumes';
import { TaskGetAvailable } from '../tasks.d/get-available/get-available';
import { TaskMarginAccumulation } from '../tasks.d/margin-accumulation/margin-accumulation';
import { TaskSettle } from '../tasks.d/settle/settle';
import { UseCases } from '../texchange/use-cases';
import { UseCaseMakeOrder } from '../use-cases.d/make-order';
import { UseCaseCancelOrder } from '../use-cases.d/cancel-order';
import { UseCaseAmendOrder } from '../use-cases.d/amend-order';
import { UseCaseGetOpenOrders } from '../use-cases.d/get-open-orders';
import { UseCaseGetPositions } from '../use-cases.d/get-positions';
import { UseCaseGetBalances } from '../use-cases.d/get-balances';
import { UseCaseUpdateOrderbook } from '../use-cases.d/update-orderbook';
import { UseCaseUpdateTrades } from '../use-cases.d/update-trades';
import { UseCaseSubscription } from '../use-cases.d/subscription';
import { UseCaseGetProgress } from '../use-cases.d/get-progress';
import { Facades } from '../texchange/facades';
import { Config as DelayConfig } from '../facades.d/config';
import { Instant } from '../facades.d/user-account/instant';
import { AdminFacade } from '../facades.d/admin';
import { UserMarketFacade } from '../facades.d/user-market';
import { UserAccountFacade } from '../facades.d/user-account';
import { Texchange } from '../texchange/texchange';
export declare abstract class Container<H extends HLike<H>> extends BaseContainer {
    abstract [TYPES.HStatic]: () => HStatic<H>;
    abstract [TYPES.spec]: () => Spec<H>;
    abstract [TYPES.TimelineLike]: () => TimelineLike;
    abstract [TYPES.MarketCalc]: () => MarketCalc<H>;
    [TYPES.DataStatic]: () => DataStatic<H>;
    [TYPES.Context]: () => Context<H>;
    abstract [TYPES.MODELS.Makers]: () => Makers<H>;
    abstract [TYPES.MODELS.Pricing]: () => Pricing<H, any>;
    [TYPES.MODELS.Assets]: () => Assets<H>;
    [TYPES.MODELS.Margins]: () => Margins<H>;
    [TYPES.MODELS.Book]: () => Book<H>;
    [TYPES.MODELS.Progress]: () => Progress<H>;
    [TYPES.Models]: () => Models<H>;
    abstract [TYPES.Mtm]: () => Mtm<H> | null;
    [TYPES.Broadcast]: () => Broadcast<H>;
    [TYPES.Tasks]: () => Tasks<H>;
    [TYPES.TASKS.MakeOpenOrder]: () => TaskMakeOpenOrder<H>;
    [TYPES.TASKS.CancelOpenOrder]: () => TaskCancelOpenOrder<H>;
    [TYPES.TASKS.GetBalances]: () => TaskGetBalances<H>;
    [TYPES.TASKS.GetClosable]: () => TaskGetClosable<H>;
    [TYPES.TASKS.GetPositions]: () => TaskGetPositions<H>;
    [TYPES.TASKS.OrderMakes]: () => TaskOrderMakes<H>;
    [TYPES.TASKS.OrderTakes]: () => TaskOrderTakes<H>;
    [TYPES.TASKS.TradeTakesOpenMakers]: () => TaskTradeTakesOpenMakers<H>;
    [TYPES.TASKS.ValidateOrder]: () => TaskValidateOrder<H>;
    [TYPES.TASKS.OrderVolumes]: () => TaskOrderVolumes<H>;
    abstract [TYPES.TASKS.GetAvailable]: () => TaskGetAvailable<H>;
    abstract [TYPES.TASKS.MarginAccumulation]: () => TaskMarginAccumulation<H>;
    abstract [TYPES.TASKS.Settle]: () => TaskSettle<H>;
    [TYPES.UseCases]: () => UseCases<H>;
    [TYPES.USE_CASES.MakeOrder]: () => UseCaseMakeOrder<H>;
    [TYPES.USE_CASES.CancelOrder]: () => UseCaseCancelOrder<H>;
    [TYPES.USE_CASES.AmendOrder]: () => UseCaseAmendOrder<H>;
    [TYPES.USE_CASES.GetOpenOrders]: () => UseCaseGetOpenOrders<H>;
    [TYPES.USE_CASES.GetPositions]: () => UseCaseGetPositions<H>;
    [TYPES.USE_CASES.GetBalances]: () => UseCaseGetBalances<H>;
    [TYPES.USE_CASES.UpdateOrderbook]: () => UseCaseUpdateOrderbook<H>;
    [TYPES.USE_CASES.UpdateTrades]: () => UseCaseUpdateTrades<H>;
    abstract [TYPES.USE_CASES.realTimeSettlement]: () => boolean;
    [TYPES.USE_CASES.Subscription]: () => UseCaseSubscription<H>;
    [TYPES.USE_CASES.GetProgress]: () => UseCaseGetProgress<H>;
    [TYPES.Facades]: () => Facades<H>;
    abstract [TYPES.FACADES.Config]: () => DelayConfig;
    [TYPES.FACADES.Instant]: () => Instant<H>;
    [TYPES.FACADES.UserMarket]: () => UserMarketFacade<H>;
    [TYPES.FACADES.UserAccount]: () => UserAccountFacade<H>;
    [TYPES.FACADES.Admin]: () => AdminFacade<H>;
    [TYPES.Texchange]: () => Texchange<H>;
}
