import { HLike, HStatic } from 'secretary-like';
import { BaseContainer } from '@zimtsui/injektor';
import { TYPES } from './types';
import { Context } from '../context';
import { Spec } from '../context.d/spec';
import { TimelineLike } from 'secretary-like';
import { DataStatic } from '../interfaces/data';
import { MarketCalc } from 'secretary-like';
import { Models } from '../texchange/models';
import * as MODELS from '../models.d';
import { Broadcast } from '../broadcast';
import { Mtm } from '../mark-to-market/mtm';
import { Tasks } from '../texchange/tasks';
import { UpdateTrades } from '../use-cases.d/update-trades';
import * as TASKS from '../tasks.d';
import { UseCases } from '../texchange/use-cases';
import * as USE_CASES from '../use-cases.d';
import { Facades } from '../texchange/facades';
import { Instant } from '../facades.d/instant';
import { Latency } from '../facades.d/latency';
import { Joystick } from '../facades.d/joystick';
import { Texchange } from '../texchange/texchange';
import { AdminTex } from '../texchange/texchange';
import { UserTex } from '../texchange/texchange';
export declare abstract class Container<H extends HLike<H>> extends BaseContainer {
    abstract [TYPES.HStatic]: () => HStatic<H>;
    abstract [TYPES.spec]: () => Spec<H>;
    abstract [TYPES.TimelineLike]: () => TimelineLike;
    abstract [TYPES.MarketCalc]: () => MarketCalc<H>;
    [TYPES.DataStatic]: () => DataStatic<H>;
    [TYPES.Context]: () => Context<H>;
    abstract [TYPES.MODELS.Makers]: () => MODELS.Makers<H>;
    abstract [TYPES.MODELS.Pricing]: () => MODELS.Pricing<H, any>;
    [TYPES.MODELS.Assets]: () => MODELS.Assets<H>;
    [TYPES.MODELS.Margins]: () => MODELS.Margins<H>;
    [TYPES.MODELS.Book]: () => MODELS.Book<H>;
    [TYPES.MODELS.Progress]: () => MODELS.Progress<H>;
    [TYPES.Models]: () => Models<H>;
    abstract [TYPES.Mtm]: () => Mtm<H> | null;
    [TYPES.Broadcast]: () => Broadcast<H>;
    [TYPES.Tasks]: () => Tasks<H>;
    [TYPES.TASKS.MakeOpenOrder]: () => TASKS.MakeOpenOrderLike<H>;
    [TYPES.TASKS.CancelOpenOrder]: () => TASKS.CancelOpenOrderLike<H>;
    [TYPES.TASKS.GetBalances]: () => TASKS.GetBalancesLike<H>;
    [TYPES.TASKS.GetClosable]: () => TASKS.GetClosableLike<H>;
    [TYPES.TASKS.GetPositions]: () => TASKS.GetPositionsLike<H>;
    [TYPES.TASKS.OrderMakes]: () => TASKS.OrderMakesLike<H>;
    [TYPES.TASKS.OrderTakes]: () => TASKS.OrderTakesLike<H>;
    [TYPES.TASKS.TradeTakesOpenMakers]: () => TASKS.TradeTakesOpenMakersLike<H>;
    [TYPES.TASKS.ValidateOrder]: () => TASKS.ValidateOrderLike<H>;
    [TYPES.TASKS.OrderVolumes]: () => TASKS.OrderVolumesLike<H>;
    abstract [TYPES.TASKS.GetAvailable]: () => TASKS.GetAvailableLike<H>;
    abstract [TYPES.TASKS.MarginAccumulation]: () => TASKS.MarginAccumulationLike<H>;
    abstract [TYPES.TASKS.Settle]: () => TASKS.SettleLike;
    [TYPES.UseCases]: () => UseCases<H>;
    [TYPES.USE_CASES.MakeOrder]: () => USE_CASES.MakeOrder<H>;
    [TYPES.USE_CASES.CancelOrder]: () => USE_CASES.CancelOrder<H>;
    [TYPES.USE_CASES.AmendOrder]: () => USE_CASES.AmendOrder<H>;
    [TYPES.USE_CASES.GetOpenOrders]: () => USE_CASES.GetOpenOrders<H>;
    [TYPES.USE_CASES.GetPositions]: () => USE_CASES.GetPositions<H>;
    [TYPES.USE_CASES.GetBalances]: () => USE_CASES.GetBalances<H>;
    [TYPES.USE_CASES.UpdateOrderbook]: () => USE_CASES.UpdateOrderbook<H>;
    [TYPES.USE_CASES.UpdateTrades]: () => UpdateTrades<H>;
    abstract [TYPES.USE_CASES.realTimeSettlement]: () => boolean;
    [TYPES.USE_CASES.Subscription]: () => USE_CASES.Subscription<H>;
    [TYPES.USE_CASES.GetProgress]: () => USE_CASES.GetProgress<H>;
    [TYPES.Facades]: () => Facades<H>;
    [TYPES.Instant]: () => Instant<H>;
    [TYPES.Latency]: () => Latency<H>;
    [TYPES.Joystick]: () => Joystick<H>;
    [TYPES.UserTex]: () => UserTex<H>;
    [TYPES.AdminTex]: () => AdminTex<H>;
    [TYPES.Texchange]: () => Texchange<H>;
}
